name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

on:
 push:
   branches:
   - v0.1
 pull_request: {}

env:
 TF_LOG: INFO
 ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
 ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
 GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       working-directory: .

   steps:
     - name: Add Git user
       run: git config --global credential.https://github.com.username ${{ secrets.GIT_USERNAME }}

     - name: Checkout the repository to the runner
       uses: actions/checkout@v2

     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.3.0
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

     - name: Terraform format
       id: fmt
       run: terraform fmt -check || echo true

     - name: Terraform init
       id: init
       run: terraform init

     - name: Terraform validate
       id: validate
       run: terraform validate

     - name: Terraform plan
       id: plan
       if: github.event_name == 'push'
       run: terraform plan -no-color -input=false
       continue-on-error: true

     - name: Terraform Plan Status
       if: steps.plan.outcome == 'failure'
       run: exit 1

     - name: Terraform Apply
       if: github.event_name == 'push' && github.event.head_commit.message == 'deploy'
       run: terraform apply -auto-approve -input=false

     - name: Terraform Destroy
       if: github.event_name == 'push' && github.event.head_commit.message == 'destroy'
       run: terraform destroy -auto-approve -input=false